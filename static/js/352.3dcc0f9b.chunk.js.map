{"version":3,"file":"static/js/352.3dcc0f9b.chunk.js","mappings":"qMAEA,MAoBA,EApBmBA,IAAoC,IAAnC,SAAEC,EAAQ,SAAEC,EAAQ,MAAEC,GAAOH,EAC/C,OACEI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJF,EAAAA,EAAAA,MAAA,QAAMH,SAAUA,EAASK,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,eACZN,MAAOA,EACPD,SAAUA,KAEZK,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,gBAEvB,E,aCVP,MAoDA,EApDeI,KAAO,IAADC,EAAAC,EACnB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAcC,IAAmBC,EAAAA,EAAAA,OACjCf,EAAOgB,IAAYJ,EAAAA,EAAAA,UAAkC,QAA1BJ,EAACK,EAAaI,IAAI,gBAAQ,IAAAT,EAAAA,EAAI,IAC1DU,GAAWC,EAAAA,EAAAA,MACXC,EAAiC,QAA5BX,EAAGI,EAAaI,IAAI,gBAAQ,IAAAR,EAAAA,EAAI,IAE3CY,EAAAA,EAAAA,YAAU,KACR,IAAKD,EAAO,OACME,WAChB,IACE,MAAM,QAAEC,SAAkBC,EAAAA,GAAmBJ,GACtB,IAAnBG,EAAQE,QAAcC,MAAM,0CAChCf,EAAUY,EAIZ,CAHE,MAAOI,GACPC,QAAQC,IAAIF,EACd,CACA,EAEFG,EAAW,GACV,CAACV,IAcJ,OACEnB,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAC2B,EAAU,CAACjC,SAbCkC,IAEf,GADAA,EAAEC,iBACY,KAAVjC,EACF,OAAO0B,MAAM,gCAEfZ,EAAgB,CAAEM,MAAOY,EAAEE,OAAO,GAAGlC,OAAQ,EAQXD,SANnBiC,IACfhB,EAASgB,EAAEE,OAAOlC,MAAM,EAK8BA,MAAOA,IAC1DU,EAAOe,OAAS,GAAKL,GACpBhB,EAAAA,EAAAA,KAAA,MAAAD,SACGO,EAAOyB,KAAIC,IACVhC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACiC,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAMxB,GAAWf,SACxDiC,EAAMO,SAFFP,EAAMI,QAOjB,OACC,C,mFCnDX,MACMI,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHiB,+BAIV,MAAMC,EAAoBxB,gBACbuB,EAAAA,EAAAA,IAAU,+BAADN,OAAgCK,KAChDG,KAGAC,EAAe1B,gBACRuB,EAAAA,EAAAA,IAAU,UAADN,OAAWC,EAAE,aAAAD,OAAYK,KACzCG,KAGAE,EAAe3B,gBACRuB,EAAAA,EAAAA,IAAU,UAADN,OAAWC,EAAE,qBAAAD,OAAoBK,KACjDG,KAGAG,EAAkB5B,gBACXuB,EAAAA,EAAAA,IAAU,UAADN,OAAWC,EAAE,qBAAAD,OAAoBK,KACjDG,KAGAI,EAAiB7B,gBACVuB,EAAAA,EAAAA,IAAU,yBAADN,OAA0BK,EAAO,WAAAL,OAAUa,KAC3DL,I","sources":["components/MovieQuery/MovieQuery.jsx","components/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst MovieQuery = ({ onSubmit, onChange, value }) => {\n  return (\n    <>\n      <h3>Find your movie:</h3>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Type here...\"\n          value={value}\n          onChange={onChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\n\n\nMovieQuery.propTypes = { onSubmit: PropTypes.func.isRequired };\n\nexport default MovieQuery;","import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport MovieQuery from 'components/MovieQuery';\nimport * as API from '../../services/api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [value, setValue] = useState(searchParams.get('query') ?? '');\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) return;\n    const findMovie = async () => {\n      try {\n        const { results } = await API.getMovieByName(query);\n        if (results.length === 0) alert('There is no movie, try another search!');\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n      }\n    };\n    findMovie();\n  }, [query]);\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (value === '') {\n      return alert('What do you want to find? :)');\n    }\n    setSearchParams({ query: e.target[0].value });\n  };\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <main>\n      <MovieQuery onSubmit={onSubmit} onChange={onChange} value={value} />\n      {movies.length > 0 || query ? (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : null}\n    </main>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0b79c5bca8197408ee9617cf88710b12';\n\naxios.defaults.baseURL = BASE_URL;\nexport const getTrendingMovies = async () => {\n  const res = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieById = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieByName = async name => {\n  const res = await axios.get(`/search/movie?api_key=${API_KEY}&query=${name}`);\n  return res.data;\n};\n    \n    \n// };\n\n// End-points\n//\n// '/' – компонент Home                          /trending/get-trending\n// '/movies' – компонент Movies                  /search/search-movies\n// '/movies/:movieId' – компонент MovieDetails   /movies/get-movie-details\n// /movies/:movieId/cast – компонент Cast        /movies/get-movie-credits\n// /movies/:movieId/reviews                      /movies/get-movie-reviews\n\n"],"names":["_ref","onSubmit","onChange","value","_jsxs","_Fragment","children","_jsx","type","placeholder","Movies","_searchParams$get","_searchParams$get2","movies","setMovies","useState","searchParams","setSearchParams","useSearchParams","setValue","get","location","useLocation","query","useEffect","async","results","API","length","alert","error","console","log","findMovie","MovieQuery","e","preventDefault","target","map","movie","Link","to","concat","id","state","from","title","API_KEY","axios","getTrendingMovies","data","getMovieById","getMovieCast","getMovieReviews","getMovieByName","name"],"sourceRoot":""}