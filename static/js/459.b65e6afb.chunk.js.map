{"version":3,"file":"static/js/459.b65e6afb.chunk.js","mappings":"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","sources":["components/MovieMarkup/MovieMarkup.styled.js","components/MovieMarkup/MovieMarkup.jsx","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Movie = styled.div`\n  display: flex;\n  gap: 1rem;\n  margin: 0.5rem 0;\n\n  > img {\n    height: 300px;\n    width: 200px;\n  }\n`;\n\nexport const MovieTitle = styled.h3`\n  margin-top: 1rem;\n`;\nexport const MovieText = styled.div`\n  margin-bottom: 1rem;\n  > span {\n    display: block;\n    font-weight: 700;\n    margin-bottom: 1rem;\n  }\n`;\nexport const MovieAddInfo = styled.div`\n  padding: 1rem 0.2rem;\n  border-bottom: 0.2rem solid rgba(0, 0, 0, 0.3);\n  border-top: 0.2rem solid rgba(0, 0, 0, 0.3);\n  > ul > li {\n    margin: 0 0 0.5rem 1rem;\n  }\n`;","import { Link, useLocation } from 'react-router-dom';\nimport {\n  Movie,\n  MovieAddInfo,\n  MovieText,\n  MovieTitle,\n} from './MovieMarkup.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieMarkup = ({ movie }) => {\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n    movie;\n\n  const location = useLocation();\n  const goBack = location?.state?.from ?? '/';\n\n  const releaseDate = new Date(release_date);\n\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated';\n\n  if (!title) {\n    return 'Unknown';\n  }\n\n  return (\n    <section>\n      <Movie>\n        <img src={posterUrl} alt={`${title} poster`} />\n        <div>\n          <MovieTitle>\n            {title ?? 'Unknown'} ({releaseYear})\n          </MovieTitle>\n          <MovieText>User Score: {userScore}</MovieText>\n          <MovieText>\n            <span>Overview:</span> {overview}\n          </MovieText>\n\n          {genres && genres.length > 0 && (\n            <MovieText>\n              <span>Genres: </span>\n              {genres.map(genre => genre.name).join(', ')}\n            </MovieText>\n          )}\n        </div>\n      </Movie>\n      <MovieAddInfo>\n        <MovieText>Additional information:</MovieText>\n\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: goBack }}>\n              Cast\n            </Link>\n          </li>\n\n          <li>\n            <Link to=\"reviews\" state={{ from: goBack }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </MovieAddInfo>\n    </section>\n  );\n};\n\nMovieMarkup.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\n\nexport default MovieMarkup;","import { BsArrowLeftShort } from 'react-icons/bs';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport * as API from '../../services/api';\nimport MovieMarkup from 'components/MovieMarkup';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetailed, setmovieDetailed] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const findMovieDetailed = async () => {\n      try {\n        setIsLoading(true);\n        const res = await API.getMovieById(movieId);\n        setmovieDetailed(res);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    findMovieDetailed();\n  }, [movieId]);\n\n  return (\n    <main>\n      <Link to={location?.state?.from ?? '/'}>\n        <button\n          type=\"button\"\n          style={{\n            marginTop: '0.5rem',\n            backgroundColor: 'transparent',\n            border: '0.02rem solid rgba(0, 0, 0, 0.3)',\n            borderRadius: '0.2rem',\n            fontSize: '0.7rem',\n          }}\n        >\n          <BsArrowLeftShort\n            style={{\n              verticalAlign: 'middle',\n              marginRight: '0.2rem',\n            }}\n          />\n          Go back\n        </button>\n      </Link>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <MovieMarkup movie={movieDetailed} state={{ from: location }} />\n      )}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0b79c5bca8197408ee9617cf88710b12';\n\naxios.defaults.baseURL = BASE_URL;\nexport const getTrendingMovies = async () => {\n  const res = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieById = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieByName = async name => {\n  const res = await axios.get(`/search/movie?api_key=${API_KEY}&query=${name}`);\n  return res.data;\n};\n    \n    \n// };\n\n// End-points\n//\n// '/' – компонент Home                          /trending/get-trending\n// '/movies' – компонент Movies                  /search/search-movies\n// '/movies/:movieId' – компонент MovieDetails   /movies/get-movie-details\n// /movies/:movieId/cast – компонент Cast        /movies/get-movie-credits\n// /movies/:movieId/reviews                      /movies/get-movie-reviews\n\n"],"names":["Movie","styled","_templateObject","_taggedTemplateLiteral","MovieTitle","_templateObject2","MovieText","_templateObject3","MovieAddInfo","_templateObject4","_ref","_location$state$from","_location$state","movie","title","release_date","poster_path","vote_average","overview","genres","location","useLocation","goBack","state","from","releaseDate","Date","releaseYear","isNaN","getFullYear","posterUrl","concat","userScore","toFixed","_jsxs","children","_jsx","src","alt","length","map","genre","name","join","Link","to","MovieDetails","movieId","useParams","movieDetailed","setmovieDetailed","useState","isLoading","setIsLoading","useEffect","async","res","API","error","console","log","findMovieDetailed","type","style","marginTop","backgroundColor","border","borderRadius","fontSize","BsArrowLeftShort","verticalAlign","marginRight","MovieMarkup","Suspense","fallback","Outlet","API_KEY","axios","getTrendingMovies","data","getMovieById","id","getMovieCast","getMovieReviews","getMovieByName"],"sourceRoot":""}