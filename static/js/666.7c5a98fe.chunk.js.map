{"version":3,"file":"static/js/666.7c5a98fe.chunk.js","mappings":"wMAEO,MAAMA,E,OAAcC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qH,aCGpC,MAgDA,EAhDgBC,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,OACbC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GAiB3C,OAfAG,EAAAA,EAAAA,YAAU,KACgBC,WACtB,IACEF,GAAa,GACb,MAAMG,QAAYC,EAAAA,EAAAA,IAAgBV,GAClCG,EAAWM,EAAIE,QAKjB,CAJE,MAAOC,GACPC,QAAQC,IAAIF,EACd,CAAC,QACCN,GAAa,EACf,GAEFS,EAAiB,GAChB,CAACf,KAGFgB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGb,GACCW,EAAAA,EAAAA,KAAA,KAAAE,SAAG,iBAEHF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGhB,EAAQiB,QACPH,EAAAA,EAAAA,KAACrB,EAAW,CAAAuB,SACThB,EAAQkB,KAAIC,IACXC,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,CACGG,EAAOE,QACND,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,WAASG,EAAOE,WAEnBP,EAAAA,EAAAA,KAAA,KAAAE,SAAG,YAEJG,EAAOG,SAAUR,EAAAA,EAAAA,KAAA,KAAAE,SAAIG,EAAOG,WAAeR,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gBANxCG,EAAOI,SAWpBT,EAAAA,EAAAA,KAAA,KAAAE,SAAG,qDAIR,C,mFC/CP,MACMQ,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHiB,+BAIV,MAAMC,EAAoBpB,gBACbmB,EAAAA,EAAAA,IAAU,+BAADE,OAAgCH,KAChDI,KAGAC,EAAevB,gBACRmB,EAAAA,EAAAA,IAAU,UAADE,OAAWJ,EAAE,aAAAI,OAAYH,KACzCI,KAGAE,EAAexB,gBACRmB,EAAAA,EAAAA,IAAU,UAADE,OAAWJ,EAAE,qBAAAI,OAAoBH,KACjDI,KAGApB,EAAkBF,gBACXmB,EAAAA,EAAAA,IAAU,UAADE,OAAWJ,EAAE,qBAAAI,OAAoBH,KACjDI,KAGAG,EAAiBzB,gBACVmB,EAAAA,EAAAA,IAAU,yBAADE,OAA0BH,EAAO,WAAAG,OAAUK,KAC3DJ,I","sources":["components/Rewievs/Reviews.styled.js","components/Rewievs/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 1rem;\n  padding: 0.3rem;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport { ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  //   console.log(movieId);\n  useEffect(() => {\n    const findMovieReview = async () => {\n      try {\n        setIsLoading(true);\n        const res = await getMovieReviews(movieId);\n        setReviews(res.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    findMovieReview();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading ? (\n        <p>Loading ...</p>\n      ) : (\n        <>\n          {reviews.length ? (\n            <ReviewsList>\n              {reviews.map(review => (\n                <li key={review.id}>\n                  {review.author ? (\n                    <b>Author: {review.author}</b>\n                  ) : (\n                    <b>No name</b>\n                  )}\n                  {review.content ? <p>{review.content}</p> : <p>No review</p>}\n                </li>\n              ))}\n            </ReviewsList>\n          ) : (\n            <p>We don't have any reviews for this movie yet </p>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0b79c5bca8197408ee9617cf88710b12';\n\naxios.defaults.baseURL = BASE_URL;\nexport const getTrendingMovies = async () => {\n  const res = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieById = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieByName = async name => {\n  const res = await axios.get(`/search/movie?api_key=${API_KEY}&query=${name}`);\n  return res.data;\n};\n    \n    \n// };\n\n// End-points\n//\n// '/' – компонент Home                          /trending/get-trending\n// '/movies' – компонент Movies                  /search/search-movies\n// '/movies/:movieId' – компонент MovieDetails   /movies/get-movie-details\n// /movies/:movieId/cast – компонент Cast        /movies/get-movie-credits\n// /movies/:movieId/reviews                      /movies/get-movie-reviews\n\n"],"names":["ReviewsList","styled","_templateObject","_taggedTemplateLiteral","Reviews","movieId","useParams","reviews","setReviews","useState","isLoading","setIsLoading","useEffect","async","res","getMovieReviews","results","error","console","log","findMovieReview","_jsx","_Fragment","children","length","map","review","_jsxs","author","content","id","API_KEY","axios","getTrendingMovies","concat","data","getMovieById","getMovieCast","getMovieByName","name"],"sourceRoot":""}